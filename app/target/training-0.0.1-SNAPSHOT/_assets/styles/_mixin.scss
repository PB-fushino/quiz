// clearfix
@mixin clearfix() {
    &::after,
    &::before {
        content: '';
        display: table;
    }
    &::after {
        clear: both;
    }
}

// 画像置換
@mixin hideText() {
    color: transparent;
    font: 0/0 a;
    overflow: hidden;
    text-shadow: none;
}

// テキスト省略
@mixin ellipsis() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
// テキスト省略解除
@mixin notEllipsis() {
    overflow: inherit;
    text-overflow: inherit;
    white-space: inherit;
}

// フォントサイズとラインハイトまとめて指定
@mixin fz($size, $height: false, $weight: false) {
    font-size: #{parseInt($size)}px;
    // font-size: #{$size / $fontRem}rem;
    @if $weight {
        font-weight: $weight;
    }
    @if $height {
        line-height: $height / $size;
    }
}
// 単位がvw版
@mixin fzvw($size, $height: false, $weight: false) {
    font-size: #{$size}px;
    font-size: vw($size);
    @if $weight {
        font-weight: $weight;
    }
    @if $height {
        line-height: $height / $size;
    }
}
// 単位がvh版
@mixin fzvh($size, $height: false, $weight: false) {
    font-size: #{$size}px;
    font-size: vh($size);
    @if $weight {
        font-weight: $weight;
    }
    @if $height {
        line-height: $height / $size;
    }
}

// letter-spacingをトラッキングの数値から計算
@mixin letterSpacing($tracking) {
    letter-spacing: #{$tracking / 1000}em;
}

// gradation
@mixin gradation($topColor, $bottomColor, $angle: to bottom) {
    background: mix(
        $topColor,
        $bottomColor,
        50%
    ); //開始色と終了色の中間の色を背景色に指定
    background: linear-gradient($angle, $topColor, $bottomColor);
}

// iPhoneXのsafe-area
@mixin safeArea($property, $val, $calc: false) {
    @if ($calc) {
        #{$property}: calc(constant(#{$val}));
        #{$property}: calc(env(#{$val}));
    } @else {
        #{$property}: constant(#{$val});
        #{$property}: env(#{$val});
    }
}
